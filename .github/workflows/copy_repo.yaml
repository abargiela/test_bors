name: copy repo

on: #workflow_dispatch
  push:

jobs:
  copy_repo:
    name: copy-repo
    runs-on: macos-latest
    timeout-minutes: 70
    steps:

        - uses: actions/checkout@v2

        - run: mkdir -p artifact_test

        - run: echo hello > artifact_test/world.txt

        - uses: actions/upload-artifact@v2
          with:
            name: artifact_test
            path: artifact_test/world.txt

        - name: Get current branch
          shell: bash
          run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          id: current_branch

        - name: copy repo
          shell: bash
          run: |
            # Create a temporary folder to clone the other repo
            CLONE_DIR=$(mktemp -d)
            DST_REPO='abargiela/test_bors_ng_v1'
            EMAIL='ci@project.io'
            USERNAME='ci'
            BRANCH=${{ steps.current_branch.outputs.branch }}
            SRC_COMMIT=$(git rev-parse HEAD)
            
            brew install gnu-sed
            echo gsed 
            whereis gsed
            echo sed
            whereis sed
            # Set the key to be able to clone the repo
            eval "$(ssh-agent -s)"

            echo "${{ secrets.SSH }}"  > /tmp/repo_rsa
            #echo "${{secrets.SSH_PRIVATE_KEY }}" > /tmp/repo_rsa
            chmod 400 /tmp/repo_rsa
            ssh-add /tmp/repo_rsa
            git config --global user.email $EMAIL
            git config --global user.name $USERNAME

             # cloning the destination repo
            BRANCH_EXISTS=$(git ls-remote --heads "git@github.com:$DST_REPO.git" $BRANCH | wc -l);
            if [ $BRANCH_EXISTS -eq 0 ];then
              git clone --depth 1 "git@github.com:$DST_REPO.git" $CLONE_DIR
              cd $CLONE_DIR
            else
              git clone -b $BRANCH --depth 1 "git@github.com:$DST_REPO.git" $CLONE_DIR;
              cd $CLONE_DIR
            fi


            # Cleaning all files on the destination repository
            git rm -r .

            # Copy all files from the src repo to the dst repo
            cd - ;
            rsync -az * .gitignore  $CLONE_DIR \
              --exclude '.git' \
              --exclude '.github';

            cd $CLONE_DIR

            gsed -i 's,xayn_ai/android/src/main/jniLibs,,g' .gitignore
            gsed -i 's,xayn_ai/ios/libxayn_ffi.a,,g' .gitignore
            gsed -i 's,xayn_ai/ios/XaynAiPlugin.h,,g' .gitignore
            gsed -i 's,xayn_ai/lib/xayn_ffi.dart,,g' .gitignore
            echo gitignore
            cat .gitignore

            git add -A;
            # If anything is modified is commited
            if [ $(git status --porcelain | wc -l) -gt 0 ]; then
            git commit --message "Commit: $SRC_COMMIT - Copy Repo: $GITHUB_REPOSITORY to Repo: $DST_REPO -  Branch: $BRANCH"
                git push -u origin HEAD:$BRANCH
            fi

